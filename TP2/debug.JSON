[
    {
        "INITIAL": {
            "tipo": "exclusive",
            "tokens": [
                {
                    "nome": "Print",
                    "ER": "r'(print|PRINT)'",
                    "funcao": "None",
                    "begin": "banana"
                },
                {
                    "nome": "Read",
                    "ER": "r'(read|READ)'",
                    "funcao": "None",
                    "begin": ""
                },
                {
                    "nome": "DUMP",
                    "ER": "r'(dump|DUMP)'",
                    "funcao": "None",
                    "begin": "INITIAL"
                }
            ],
            "ignore": "\" \\n\\t\\r\"",
            "ignoreRead": true,
            "error": {
                "mensagem": "Mensagem de erro",
                "comando": "skip"
            },
            "errorRead": true
        },
        "banana": {
            "tipo": "inclusive",
            "tokens": [
                {
                    "nome": "INT",
                    "ER": "r'\\d+'",
                    "funcao": "int",
                    "begin": "laranja"
                },
                {
                    "nome": "Print",
                    "ER": "r'(print|PRINT)'",
                    "funcao": "None",
                    "begin": "INITIAL"
                }
            ],
            "ignore": "",
            "ignoreRead": false,
            "error": {
                "mensagem": "Erro l\u00e9xico",
                "comando": "skip"
            },
            "errorRead": false
        },
        "laranja": {
            "tipo": "exclusive",
            "tokens": [
                {
                    "nome": "ID",
                    "ER": "r'[a-zA-Z_]\\w*'",
                    "funcao": "None",
                    "begin": ""
                }
            ],
            "ignore": "",
            "ignoreRead": false,
            "error": {
                "mensagem": "Erro l\u00e9xico",
                "comando": "noskip"
            },
            "errorRead": true
        }
    },
    {
        "precedence": [
            [
                "left",
                "+"
            ],
            [
                "left",
                "-"
            ]
        ],
        "precedenceRead": true,
        "variables": [
            [
                "ola",
                "\"ola\""
            ],
            [
                "val",
                90
            ],
            [
                "tabelaIDs",
                "{}"
            ],
            [
                "lista",
                "[   ]"
            ]
        ],
        "productions": [
            {
                "nome": "prog",
                "conteudo": "comandos",
                "codigo": "",
                "alias": "p1"
            },
            {
                "nome": "comandos",
                "conteudo": "",
                "codigo": "",
                "alias": "empty"
            },
            {
                "nome": "comandos",
                "conteudo": "comandos comando ';'",
                "codigo": "",
                "alias": "rec"
            },
            {
                "nome": "comando",
                "conteudo": "ID '=' exp",
                "codigo": "p.parser.tabelaIDs[p[1]] = p[3]",
                "alias": "p1"
            },
            {
                "nome": "comando",
                "conteudo": "Print exp",
                "codigo": "print(p[2])",
                "alias": "p2"
            },
            {
                "nome": "comando",
                "conteudo": "Read exp",
                "codigo": "r = int(input())\n\tp.parser.tabelaIDs[p[2]] = r",
                "alias": "Read"
            },
            {
                "nome": "comando",
                "conteudo": "DUMP",
                "codigo": "print(p.parser.tabelaIDs)",
                "alias": "p4"
            },
            {
                "nome": "exp",
                "conteudo": "aexp",
                "codigo": "p[0] = p[1]",
                "alias": "p1"
            },
            {
                "nome": "aexp",
                "conteudo": "termo",
                "codigo": "p[0] = p[1]",
                "alias": "p1"
            },
            {
                "nome": "aexp",
                "conteudo": "aexp '+' termo",
                "codigo": "p[0] = p[1] + p[3]",
                "alias": "p2"
            },
            {
                "nome": "aexp",
                "conteudo": "aexp '-' termo",
                "codigo": "p[0] = p[1] - p[3]",
                "alias": "p3"
            },
            {
                "nome": "termo",
                "conteudo": "fator",
                "codigo": "p[0] = p[1]",
                "alias": "fator"
            },
            {
                "nome": "termo",
                "conteudo": "termo '*' INT",
                "codigo": "p[0] = p[1] * p[3]",
                "alias": "mul"
            },
            {
                "nome": "termo",
                "conteudo": "termo '/' INT",
                "codigo": "p[0] = p[1] / p[3]",
                "alias": "div"
            },
            {
                "nome": "fator",
                "conteudo": "INT",
                "codigo": "p[0] = p[1]",
                "alias": "p1"
            },
            {
                "nome": "fator",
                "conteudo": "ID",
                "codigo": "getVar()",
                "alias": "p2"
            },
            {
                "nome": "fator",
                "conteudo": "'(' exp ')'",
                "codigo": "p[0] = p[2]",
                "alias": "p3"
            }
        ],
        "error": {
            "mensagem": "Erro Sint\u00e1xico",
            "comando": "skip"
        },
        "errorRead": true,
        "aliascounter": {
            "prog": 1,
            "comandos": 2,
            "comando": 4,
            "exp": 1,
            "aexp": 3,
            "termo": 3,
            "fator": 3
        }
    },
    {
        "tokenlist": [
            "INT",
            "ID",
            "Print",
            "Read",
            "DUMP"
        ],
        "literals": "\"+-*/()=;\"",
        "literalslist": [
            "\"",
            "+",
            "-",
            "*",
            "/",
            "(",
            ")",
            "=",
            ";"
        ],
        "literalsRead": true,
        "lexContextRead": true,
        "lexRead": true,
        "yaccRead": true,
        "prodlist": [
            "prog",
            "comandos",
            "comando",
            "exp",
            "aexp",
            "termo",
            "fator"
        ]
    }
]