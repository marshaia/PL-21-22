prog : lexOp yaccOp END

lexOp : 
      | LEXSTART lex

yaccOp : 
       | YACCSTART yacc

lex : lexParametros

lexParametros : lexParametro
              | lexParametros lexParametro

lexParametro : lexToken
             | lexRegra

lexToken : TOKENID '=' '(' ER lexTokenOp

lexTokenOp : ')'
           | ',' tokenFunc ')'

tokenFunc : FSTR
          | FINT
          | FFLOAT
          | FDOUBLE


lexRegra : lexIgnore
         | lexLiterals
         | TOKENEND
         | comError

lexIgnore : LEXIGNORE '=' STRING

lexLiterals : LEXLITERALS '=' STRING

comError : COMERROR '=' '(' STRING comErrorOP

comErrorOP : ')'
           | ',' skipOps ')'

skipOps : SKIP
        | NOSKIP



yacc : yaccParametros

yaccParametros : yaccParametro
               | yaccParametros yaccParametro

yaccParametro : yaccVar
              | yaccRegra
              | yaccGram

yaccRegra : comError
          | yaccPrecedence

yaccPrecedence : YACCPRECEDENCE '=' '(' yaccPreTuplos ')'

yaccPreTuplos : yaccPreTuplo
              | yaccPreTuplos ',' yaccPreTuplo

yaccPreTuplo : '(' STRING ',' STRING yaccPreTuploOP 

yaccPreTuploOP : ')'
               | ',' STRING yaccPreTuploOP

yaccVar : YACCVAR YACCVALUE

yaccGram : YACCGRAM YACCGRAMVALUE yaccGramOp

yaccGramOp :
           | YACCGRAMCOM